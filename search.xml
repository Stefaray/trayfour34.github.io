<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>算法2.二维数组中的查找</title>
      <link href="/posts/58914.html"/>
      <url>/posts/58914.html</url>
      
        <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</p><p><strong>示例 1：</strong></p><pre class="line-numbers language-text"><code class="language-text">现有矩阵 matrix 如下：[  [1,   4,  7, 11, 15],  [2,   5,  8, 12, 19],  [3,   6,  9, 16, 22],  [10, 13, 14, 17, 24],  [18, 21, 23, 26, 30]]给定 target = 5，返回 true。给定 target = 20，返回 false。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h4><h5 id="方法一：二叉搜索树"><a href="#方法一：二叉搜索树" class="headerlink" title="方法一：二叉搜索树"></a>方法一：二叉搜索树</h5><blockquote><p>时间复杂度：$O(M+N)$</p><p>空间复杂度：$O(1)$</p></blockquote><p><strong>代码如下</strong></p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token keyword">bool</span> <span class="token function">findNumberIn2DArray</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">>></span><span class="token operator">&amp;</span> matrix<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> matrix<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> target<span class="token punctuation">)</span> i<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> j<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>解法分析</strong></p><p>如下图所示，我们将矩阵逆时针旋转 45° ，并将其转化为图形式，发现其类似于 二叉搜索树 ，即对于每个元素，其左分支元素更小、右分支元素更大。因此，通过从 “根节点” 开始搜索，遇到比 target 大的元素就向左，反之向右，即可找到目标值 target 。</p><p><img src="https://raw.githubusercontent.com/trayfour34/Picture_Bed/master/20200920143519.png" alt="image-20200920143519269"></p><h5 id="方法二：线性查找"><a href="#方法二：线性查找" class="headerlink" title="方法二：线性查找"></a>方法二：线性查找</h5><blockquote><p>时间复杂度：$O(N+M)$</p><p>空间复杂度：$O(1)$</p></blockquote><p><strong>代码如下</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">findNumberIn2DArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> matrix<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>matrix <span class="token operator">==</span> null <span class="token operator">||</span> matrix<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> rows <span class="token operator">=</span> matrix<span class="token punctuation">.</span>length<span class="token punctuation">,</span> columns <span class="token operator">=</span> matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">int</span> row <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> column <span class="token operator">=</span> columns <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>row <span class="token operator">&lt;</span> rows <span class="token operator">&amp;&amp;</span> column <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> num <span class="token operator">=</span> matrix<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>column<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">></span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>                column<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                row<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>解法分析</strong></p><p>从二维数组的右上角开始查找。如果当前元素等于目标值，则返回 true。如果当前元素大于目标值，则移到左边一列。如果当前元素小于目标值，则移到下边一行。</p><p>可以证明这种方法不会错过目标值。如果当前元素大于目标值，说明当前元素的下边的所有元素都一定大于目标值，因此往下查找不可能找到目标值，往左查找可能找到目标值。如果当前元素小于目标值，说明当前元素的左边的所有元素都一定小于目标值，因此往左查找不可能找到目标值，往下查找可能找到目标值。</p><ul><li>若数组为空，返回 false</li><li>初始化行下标为 0，列下标为二维数组的列数减 1</li><li>重复下列步骤，直到行下标或列下标超出边界<ul><li>获得当前下标位置的元素 num</li><li>如果 num 和 target 相等，返回 true</li><li>如果 num 大于 target，列下标减 1</li><li>如果 num 小于 target，行下标加 1</li></ul></li><li>循环体执行完毕仍未找到元素等于 target ，说明不存在这样的元素，返回 false</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 二叉树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法1.数组中重复的数字</title>
      <link href="/posts/32976.html"/>
      <url>/posts/32976.html</url>
      
        <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。</p><p><strong>示例 1：</strong></p><pre class="line-numbers language-text"><code class="language-text">输入：[2, 3, 1, 0, 2, 5, 3]输出：2 或 3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h4><h5 id="方法一：原地置换"><a href="#方法一：原地置换" class="headerlink" title="方法一：原地置换"></a>方法一：原地置换</h5><blockquote><p>时间复杂度：$O(N)$</p><p>空间复杂度：$O(1)$</p></blockquote><p><strong>代码如下</strong></p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token keyword">int</span> <span class="token function">findRepeatNumber</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>                i<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>nums<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>解法分析</strong></p><p>主要思路在于将数组index和相应的value对应起来。在while循环体内，每个值至多通过两次（多数是一次）交换，规划到相应的位置。因此时间复杂度为$O(N)$</p><p><strong>解法注意点</strong></p><ul><li>while循环的复杂度需要均摊分析</li><li>如果要求不改变原数组，则此方法无效</li><li>如果题目没有规定 「所有数字都在 0～n-1 的范围内」，则此方法无效。（考虑数组空间）</li><li>做题的时候，需要考虑时间复杂度、空间复杂度、是否可以改变原数组等。</li></ul><h5 id="方法二：Hash映射法"><a href="#方法二：Hash映射法" class="headerlink" title="方法二：Hash映射法"></a>方法二：Hash映射法</h5><blockquote><p>时间复杂度：$O(N)$</p><p>空间复杂度：$O(N)$</p></blockquote><p><strong>代码如下</strong></p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token keyword">int</span> <span class="token function">findRepeatNumber</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        unordered_map<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">bool</span><span class="token operator">></span> map<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> num<span class="token punctuation">;</span>            map<span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>解法分析</strong></p><p>通过map映射，将数字逐个放到hash表里，若某个数之前hash没有，则值true；若某个数之前hash存在，即映射过程中发现值为true，则可以判断重复。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>许久许久没有更博了...</title>
      <link href="/posts/20460.html"/>
      <url>/posts/20460.html</url>
      
        <content type="html"><![CDATA[<p>很无聊的计算了一下，距离我上一次更博的日子已经有115天了。想起了当初博客建立起来的时候，立志一天一更的画面，再看看现在……</p><h5 id=""><a href="#" class="headerlink" title=""></a><img src="http://ray34.cn-sh2.ufileos.com/博文/许久许久没有更博了./image-20200626182638452.png" alt="我的更博速度"></h5><p>╮(╯▽╰)╭</p><p>期间也不是没有要写文章的意思，但素有拖延症本症的我总是有各种理由搪塞过去，例如但不限于最近好忙再等等、粗制滥造零容忍、惊世大篇要酝酿、无人问津无所谓……直到感觉不好意思继续拖下去的时候，才开始转过头来回顾，这些天里，我到底在干什么？</p><p>由于这场突如其来的疫情，我一直处于闲赋在家的状态，但是偶尔偶尔还是会出去见一见冠冠，看一看婆婆，亦或是跟着朋友去happy。日子一天天过去，我有时候甚至会感觉，能有一个学期感受在家学习上课的机会，其实特别特别好。以后再也很难有机会跟家人相处这么长的时间，待到踏入社会工作之际，朋友之间的见面也不会有现在那么频繁，人呐，总是要慢慢孤独下去的。因此，我十分享受这段因为疫情被迫在家的生活。</p><p>要问在这段日子里有没有让我感到特别快乐的瞬间，大抵是在二月的时候建了这个属于自己的独立网站空间吧。感觉自己的心在偌大的网络世界里有了一块安身之地，也十分满意这个博客的整体设计，直到四个月后的现在来看，也觉得自己当初的设计特别到位（自夸ing）</p><p>另外在这段期间，用上学期兼职的钱买了台iPad，高中同桌还帮忙挑了好久。虽然现在iPad在我这里依旧没有发挥生产力，每天只有吃灰的份，但还是很开心能拥有这样一段记忆。</p><p>结果并不是最重要的，最重要的是过程。 </p><p>如果要问我在这段时间里干了什么有意义的事情，其实我现在仔细想想还真没干什么。也许是疫情留给我的时间太长了，向来不怎么追剧的我先是追了国漫天行九歌（不是二次元，单纯着迷于剧本里的台词）后来跟了妈妈看了一两集《都挺好》后入坑了，花了三天刷完了整部剧。感觉我每当看一部剧的时候，心中都要默默吹爆这部剧的编剧无数次；但当片终人散的时候，偶尔回想起来，感觉其实也没好到爆吹的地步，甚至会觉得有点浪费时间？因此我一直很好奇追剧女生的脑回路是怎样的（疯狂暗示）</p><p>除了完成上述两个大工程之外，我回想了一遍，感觉大部分时间都在开发或者学习开发的路上了（虽然以后我不是很想走这条路）。4月份的时候，逸宏问我要不要一起参加大夏杯，这学期本来就没什么事情的我觉得这是个告别懒惰的大好机会，又是大佬主动邀请，就应下来了。不过在之前我从来没有做过手机端小程序或者APP的经历，所以刚开始还是不轻松的，好在在开发的过程中也能渐渐摸出自己的路来。经历了大概一个月的学习+实践之后，心理健康评估平台初见端倪：</p><p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2F%E8%AE%B8%E4%B9%85%E8%AE%B8%E4%B9%85%E6%B2%A1%E6%9C%89%E6%9B%B4%E5%8D%9A%E4%BA%86.%2Fimage-20200627234147028.png" alt="image-20200627234147028"></p><p>嗯哼？感觉应该还是可以的？（别骂辣别骂辣……）</p><p>五月份的时候跟着鹏宇哥哥一起参加了上海的三创赛和挑战杯，虽然三创赛没能拿奖，但经过了对项目整个流程的参与和开发，感觉还是开阔了自己不少的眼界。</p><p>这次的计划是做一个MoodRecordAndAnalyse的APP，主要的作用是让用户有个记录时刻情绪或者每日小结的地方，后台基于用户的情绪数据时刻关心用户的情绪走向，适时提供关心和相关消息推荐；同时还搭建了一个情绪交流广场，让所有人有个交流的平台。</p><p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2F%E8%AE%B8%E4%B9%85%E8%AE%B8%E4%B9%85%E6%B2%A1%E6%9C%89%E6%9B%B4%E5%8D%9A%E4%BA%86.%2Fimage-20200627234410342.png" alt="image-20200627234410342"></p><p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2F%E8%AE%B8%E4%B9%85%E8%AE%B8%E4%B9%85%E6%B2%A1%E6%9C%89%E6%9B%B4%E5%8D%9A%E4%BA%86.%2Fimage-20200627234419855.png" alt="image-20200627234419855"></p><p>有了之前大夏杯积累的经验，这次感觉会熟练很多。同时我想体验一下全栈式是怎样的感觉，因此这次我几乎单独进行了前端和后端的所有制作的过程。这样的后果就是前端有bug后端也有bug，每时每刻都在和bug作斗争。有时候会熬夜到两三点，倒不是因为ddl，更多的是心系bug。大约奋战了十多天吧，终于把较为完整的初版本完成了。嗯……UI还不错？漂流瓶还挺好玩？</p><p>六月的话，本来是要完成共享单车管理系统期末大作业的，但是刚开始没多久老师就决定拖延到暑假之后再交。既然老师都这么说了，那身为重度拖延症患者的我哪里还有做的道理<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">😄</span></p><p><img src="http://ray34.cn-sh2.ufileos.com/博文/许久许久没有更博了./image-20200627112931584.png" alt="共享单车后台数据页面"></p><p>最近几天感觉挺颓的，老师遗留的一些课还没有看，前段时间买了好多书到现在一页都没翻过。人呐，一个月总有那么几十天是颓废的，过了就好啦<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f642.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f642.png?v8">🙂</span></p><p>写了那么多，一个是完成更博任务；一个也是记一记进来的近况，好让自己后来翻起来也有个念想。暑假快到了，希望你能继续保持积极快乐的心态，希望我也是！</p><p>如果快乐太难 那祝我早日更博<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f64d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64d.png?v8">🙍</span></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 流水账 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ucloud----对象存储的最终选择</title>
      <link href="/posts/64617.html"/>
      <url>/posts/64617.html</url>
      
        <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>域名申请之后的第三个星期，阿里云终于通过了我的域名审核。鉴于此前dmca服务器架设在国外，本地阅览我博客里面的音乐视频效果都不是太好。加上picgo图床存放下的图片集杂乱无章，不好整理归档。因此我想寻找一个真正能够存放托管我博客大小文件的空间。此篇记录了我解决此问题的简要经历。</p><h3 id="picgo"><a href="#picgo" class="headerlink" title="picgo"></a>picgo</h3><p>博客中的文件，其实就是以图片视频音频这三类为主。在最开始的时候，为了简化操作，我将所有的文件都放在了项目根目录下，简单快捷，但对于网站的访问速度来说却是一大灾难。因此在后期优化的过程中，我开始寻找能够生成外链的公共空间。picgo+github存储是网上比较潮流的生成图片外链的方法。的确，在github平台的托管下，你可以在保证不掏腰包的状态下还能拥有无限的下载流量和无限的存储空间。而且上传下载速度也不用担心，因为在手动融合jsdelivr技术于此图床之后，就等同于拥有一个免费的cdn给你的博客加速，简直不能再好了。</p><blockquote><p>picgo样例：<a href="https://cdn.jsdelivr.net/gh/trayfour34/blog-photo-space/Blog_IMG/20200206020357.png" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/trayfour34/blog-photo-space/Blog_IMG/20200206020357.png</a></p></blockquote><h3 id="dmca"><a href="#dmca" class="headerlink" title="dmca"></a>dmca</h3><p>事实上，上面这个方法确实十分完美的解决了我80%的问题。可是picgo图床终归只是图床，github上也只能存放着我类似于png、bmp、jpg等图片类型，音乐和视频这些比较大的文件却无法存放于此。因此我想，只要再找个空间能够存放音频也就解决了。一顿知乎之后，发现dmca.gripe免费又简单，测试中流量速度也不慢。行，就它了！</p><p>理论上这个问题到此为止就算完美解决了。但后来同学测试完反映情况后我才知道，原来关了vpn之后加载速度堪忧，进度条半天才向前滑一点点。因此我只能另寻出路。</p><h3 id="七牛云"><a href="#七牛云" class="headerlink" title="七牛云"></a>七牛云</h3><p>之前，无论是图床还是音频空间，我主要是寻求一些比较次的免费产品，能省即省嘛<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f605.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f605.png?v8">😅</span>在dmca之后，我也尝试了<a href="https://coka.la/" target="_blank" rel="noopener">Coka.la</a>、<a href="https://streamable.com/" target="_blank" rel="noopener">Streamable</a>等，效果都不是太好。所以我转向寻求大产，寄希望于能碰上某个大产推出免费产品活动的契机（可惜没有）。腾讯云两年前还是可以白嫖的，现在似乎都没了，只推出免费六个月活动。阿里云和华为云需要长期收费。正当山重水复的时候，七牛云映入眼前，一个域名可享每日10G流量+10G存储空间+cdn加速，关键是免费啊。于是把东西都搬了过去，最后测试速度也没问题。大功告成！</p><blockquote><p>七牛云样例：<a href="http://q5okos5qx.bkt.clouddn.com/%E6%B8%A9%E6%9F%94.mp3" target="_blank" rel="noopener">温柔.mp3</a></p></blockquote><h3 id="备案风波"><a href="#备案风波" class="headerlink" title="备案风波"></a>备案风波</h3><p>但是几天之后我才发现，我忽略了一行小小的tip，如下</p><p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2FUcloud----%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%9A%84%E6%9C%80%E7%BB%88%E9%80%89%E6%8B%A9%2F1.png" alt="tip" style="zoom: 67%;"></p><p>也就是说，它给我的是一个测试域名，测试域名要回收，需要创建自定义域名才能永久使用。然而创建自定义域名要将域名备案……</p><p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2FUcloud----%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%9A%84%E6%9C%80%E7%BB%88%E9%80%89%E6%8B%A9%2F2.png" alt="备案域名才能使用" style="zoom: 67%;"></p><p>行，备案就备案吧，再等个几天也不是什么事儿。</p><p>然而，当我把填写备案信息的时候我才发现，原来备案要买备案商的服务器或者虚拟主机，阿里云最便宜的也要一百多块一年….额溜了溜了。</p><p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2FUcloud----%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%9A%84%E6%9C%80%E7%BB%88%E9%80%89%E6%8B%A9%2F3.png" alt="备案" style="zoom: 50%;"></p><p>那个时候还想看看能不能白嫖到一台云主机来备案，所以从阿里云的<strong>万网虚机试用</strong>服务和aws的一年免费主机，但都显示只有转正了才能备案。这条路也断了…</p><h3 id="Ucloud"><a href="#Ucloud" class="headerlink" title="Ucloud"></a>Ucloud</h3><p>最后在漫无目的的搜寻之中，我发现了青云和Ucloud两个不太出名的云服务商。Ucloud推出每个月20G的流量+20G的存储空间，完全适用于小博客的运维。而且Ucloud的客服真的是圈粉了，提交的工单总是能在很短的时间内就予以回复。在开通之前还给我通了个电话，确认我开通对象存储的要求，并嘱咐我注意流量的使用，因为流量超出是没有短信提醒的。（亲身经历，不是打广告<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">😄</span>）</p><p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2FUcloud----%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%9A%84%E6%9C%80%E7%BB%88%E9%80%89%E6%8B%A9%2F4.png" alt="(工单)"></p><blockquote><p>Ucloud样例：<a href="http://ray34.cn-sh2.ufileos.com/home%2F%E6%B8%A9%E6%9F%94.png" target="_blank" rel="noopener">http://ray34.cn-sh2.ufileos.com/home%2F%E6%B8%A9%E6%9F%94.png</a></p></blockquote><p>而且它提供一个域名多个地区服务，每个地区20G流量+20G空间。结算下来一百多G，已经是很大很大了。如果能自己实现负载均衡的话，后台就可以自己判断哪个地区的空间多，然后自动把文件放在哪里。具体的实现可以看看这篇文章   <a href="https://www.xiebruce.top/644.html" target="_blank" rel="noopener">使用nginx负载均衡+多个云的免费额度打造免费markdown图床</a>    </p><p>另外，相比之下Ucloud还有一点做的很好，就是文件归档。对比七牛或者阿里云亦或是picgo图床，Ucloud可以像在本地新建文件夹命名文件夹一样，把图片视频以文件夹的形式分好。对比如下：</p><p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2FUcloud----%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%9A%84%E6%9C%80%E7%BB%88%E9%80%89%E6%8B%A9%2F5.png" alt="(七牛云)"></p><p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2FUcloud----%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%9A%84%E6%9C%80%E7%BB%88%E9%80%89%E6%8B%A9%2F6.png" alt="(picgo)"></p><p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2FUcloud----%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%9A%84%E6%9C%80%E7%BB%88%E9%80%89%E6%8B%A9%2F7.png" alt="(Ucloud)"></p><h3 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h3><p>至此，这个问题终究告一段落，不会再有反转了哈哈。在这个过程中我也懂了不少东西，也并非完全浪费时间<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f60f.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60f.png?v8">😏</span>其中还发现了阿里云的虚机试用，后续可以借此机会好好看看。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 发现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ucloud </tag>
            
            <tag> picgo </tag>
            
            <tag> 七牛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dmca.gripe:永久托管你的小文件</title>
      <link href="/posts/20976.html"/>
      <url>/posts/20976.html</url>
      
        <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>此篇是我严格意义上的第一篇博文。选择这个主题也是因为在后续优化博客的过程中碰到了相应的问题。故借此机会写下来分享分享。</p><p>因为自己想要在博客中增添音乐和视频板块，在搭建博客的时候参考别人的博客，发现大部分人都是去通过找寻免费的音频网站，获取外链的方式将音乐地址。但这样找寻地址既麻烦，又不能保证音频地址的长期有效性。因为大多数免费音频网站的音乐地址并不是永久固定的，一旦某日链接失效就不能用了。</p><p>我在搭建的时候，为了图方便，把视频和音乐事先下载好放在根目录下，然后将所有音乐和视频的url全部设置成本地地址。但在后期优化的过程中，我发现这样子做虽然确保了链接的永久有效性，但却大大影响了访问速率（一个视频的大小就相当于我其他文件的总和了）。因此，我想找一个既简单免费（毕竟为了这个需求去阿里云买空间实在不值得）、又能永久托管储存我的一些小文件的工具。而 dmca.gripe 完美符合我的需求。</p><p>dmca.gripe下，每个文件的最大上传大小是 5120MB，有账户机制，创建一个账户后便有一个属于你自己的云空间。经测试，上传下载速度都不成问题。任何文件都可以上传。因为博客中的图片，音乐，视频都需要外链，所以我以以上三种文件类型进行测试。</p><p><a href="https://dmca.gripe/" target="_blank" rel="noopener">点击进入dema.gripe</a></p><hr><h3 id="图片外链测试"><a href="#图片外链测试" class="headerlink" title="图片外链测试"></a>图片外链测试</h3><p><img src="https://share.dmca.gripe/yz94A9s1yL956wBr.jpg" alt="img"></p><pre><code>https://share.dmca.gripe/yz94A9s1yL956wBr.jpg</code></pre><h3 id="视频外链测试"><a href="#视频外链测试" class="headerlink" title="视频外链测试"></a>视频外链测试</h3><p><video playsinline="" webkit-playsinline="" preload="auto" controls="" src="https://share.dmca.gripe/o0svzfA3yJtXnrMI.mp4" width="100%">视频由ray分享，如果您看到这段话说明视频已经失效.</video></p><pre><code>https://share.dmca.gripe/o0svzfA3yJtXnrMI.mp4</code></pre><h3 id="音乐外链测试"><a href="#音乐外链测试" class="headerlink" title="音乐外链测试"></a>音乐外链测试</h3><audio controls="controls">  <source src="https://share.dmca.gripe/pGyp6q8ii3EDZ4ZI.mp3" type="audio/ogg"><embed height="100" width="100" src="/i/song.mp3"></audio><pre><code>https://share.dmca.gripe/pGyp6q8ii3EDZ4ZI.mp3</code></pre><h3 id="文件下载测试"><a href="#文件下载测试" class="headerlink" title="文件下载测试"></a>文件下载测试</h3><h5 id="花海-mp3"><a href="#花海-mp3" class="headerlink" title="花海.mp3"></a><a href="https://share.dmca.gripe/pGyp6q8ii3EDZ4ZI.mp3" target="_blank" rel="noopener">花海.mp3</a></h5><h5 id=""><a href="#" class="headerlink" title=" "></a> </h5><hr><h5 id="2月22日更新："><a href="#2月22日更新：" class="headerlink" title="2月22日更新："></a>2月22日更新：</h5><h6 id="由于该网站的服务器架设在国外，所以没有挂vpn的话速度会有点慢。（之前测试一直是挂着vpn-smile-）"><a href="#由于该网站的服务器架设在国外，所以没有挂vpn的话速度会有点慢。（之前测试一直是挂着vpn-smile-）" class="headerlink" title="由于该网站的服务器架设在国外，所以没有挂vpn的话速度会有点慢。（之前测试一直是挂着vpn:smile:）"></a>由于该网站的服务器架设在国外，所以没有挂vpn的话速度会有点慢。（之前测试一直是挂着vpn<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">😄</span>）</h6><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 发现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gripe </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is my very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start-smile-smile-smile-smile"><a href="#Quick-Start-smile-smile-smile-smile" class="headerlink" title="Quick Start :smile: :smile::smile: :smile:"></a>Quick Start :smile: :smile::smile: :smile:</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-lang-bash"><code class="language-lang-bash">$ hexo new "My New Post"<div class="statis">    <span class="count"><a href="<%- url_for('/categories') %>" target="_blank"><%- site.categories.length %></a></span>    <span class="name"><%- __('categories') %></span></div><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-lang-bash"><code class="language-lang-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-lang-bash"><code class="language-lang-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-lang-bash"><code class="language-lang-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
